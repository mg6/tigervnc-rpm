diff -up tigervnc-1.8.0/unix/xserver/hw/vnc/xorg-version.h.jx tigervnc-1.8.0/unix/xserver/hw/vnc/xorg-version.h
--- tigervnc-1.8.0/unix/xserver/hw/vnc/xorg-version.h.jx	2017-05-16 09:53:28.000000000 -0400
+++ tigervnc-1.8.0/unix/xserver/hw/vnc/xorg-version.h	2018-06-06 15:42:07.388157181 -0400
@@ -52,8 +52,10 @@
 #define XORG 118
 #elif XORG_VERSION_CURRENT < ((1 * 10000000) + (19 * 100000) + (99 * 1000))
 #define XORG 119
+#elif XORG_VERSION_CURRENT < ((1 * 10000000) + (20 * 100000) + (99 * 1000))
+#define XORG 120
 #else
-#error "X.Org newer than 1.19 is not supported"
+#error "X.Org newer than 1.20 is not supported"
 #endif
 
 #endif
diff -up tigervnc-1.8.0/unix/xserver/hw/vnc/xvnc.c.jx tigervnc-1.8.0/unix/xserver/hw/vnc/xvnc.c
--- tigervnc-1.8.0/unix/xserver/hw/vnc/xvnc.c.jx	2017-05-16 09:53:28.000000000 -0400
+++ tigervnc-1.8.0/unix/xserver/hw/vnc/xvnc.c	2018-06-06 15:42:58.384936550 -0400
@@ -202,6 +202,7 @@ vfbBitsPerPixel(int depth)
 
 static void vfbFreeFramebufferMemory(vfbFramebufferInfoPtr pfb);
 
+#if XORG < 120
 #ifdef DPMSExtension
     /* Why support DPMS? Because stupid modern desktop environments
        such as Unity 2D on Ubuntu 11.10 crashes if DPMS is not
@@ -219,6 +220,7 @@ Bool DPMSSupported(void)
     return FALSE;
 }
 #endif
+#endif
 
 #if XORG < 111
 void ddxGiveUp()
@@ -1491,6 +1493,12 @@ vfbCloseScreen(ScreenPtr pScreen)
 #endif
 }
 
+#if XORG >= 120
+static void vncDPMS(ScreenPtr pScreen, int level)
+{
+}
+#endif
+
 static Bool
 #if XORG < 113
 vfbScreenInit(int index, ScreenPtr pScreen, int argc, char **argv)
@@ -1661,6 +1669,9 @@ vfbScreenInit(ScreenPtr pScreen, int arg
     if (!ret) return FALSE;
 #endif
 
+#if XORG >= 120
+    pScreen->DPMS = vncDPMS;
+#endif
 
   return TRUE;
 
@@ -1696,7 +1707,9 @@ InitOutput(ScreenInfo *scrInfo, int argc
 
     vncPrintBanner();
 
-#if XORG >= 113
+#if XORG >= 120
+    xorgGlxCreateVendor();
+#elif XORG >= 113
 #ifdef GLXEXT
     if (serverGeneration == 1)
 #if XORG >= 116
